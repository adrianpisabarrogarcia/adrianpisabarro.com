---
import { getCollection } from "astro:content";

const allBlogPosts = await getCollection("blog");
allBlogPosts.sort(
  // Ordenar las entradas por fecha de publicación de forma descendente
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
allBlogPosts.forEach((post: any) => {
  post.formattedDate = formatDate(post.data.date);
});

function formatDate(date: string) {
  return new Intl.DateTimeFormat("es-ES", {
    year: "numeric",
    month: "long",
    day: "2-digit",
  }).format(new Date(date));
}
---

<section class="sm:mt-20 mt-10">
  <h2 class="flex items-center text-3xl font-semibold">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="40"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon icon-tabler icons-tabler-outline icon-tabler-pencil pr-1"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4"></path>
      <path d="M13.5 6.5l4 4"></path>
    </svg>
    Últimos artículos
  </h2>
  {
    allBlogPosts.map((post: any) => (
      <a
        class="p-2 rounded-lg dark:hover:bg-slate-500 hover:bg-slate-200 bg-slate-100 dark:bg-slate-600 flex items-center mt-4 shadow-md transition-all duration-300 ease-in-out"
        href={`/blog/${post.slug}`}
        aria-label={post.data.title}
      >
        <div class="w-1/10">
          <img
            src={post.data.image.src}
            alt={post.data.image.alt}
            class="w-16 h-16 object-cover rounded-lg"
          />
        </div>
        <div class="w-9/10 ms-3">
          <h3 class="text-xl font-medium">{post.data.title}</h3>
          <p class="text-gray-600 dark:text-gray-300 text-sm">
            {post.formattedDate} · {post.data.category}
          </p>
        </div>
      </a>
    ))
  }
</section>
